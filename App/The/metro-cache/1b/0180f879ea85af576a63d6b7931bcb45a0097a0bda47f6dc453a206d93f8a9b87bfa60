{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo","data":{"isAsync":false}},{"name":"../components/StyledText","data":{"isAsync":false}},{"name":"../constants/allTasks","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _expo = _$$_REQUIRE(_dependencyMap[11], \"expo\");\n\n  var _StyledText = _$$_REQUIRE(_dependencyMap[12], \"../components/StyledText\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/aniket/coding/reactnative/LocationTrackingApp/App/The/screens/HomeScreen.js\";\n\n  var _components = {\n    HomeScreen: {\n      displayName: \"HomeScreen\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/aniket/coding/reactnative/LocationTrackingApp/App/The/screens/HomeScreen.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var tasks = _$$_REQUIRE(_dependencyMap[13], \"../constants/allTasks\");\n\n  tasks = tasks.tasks;\n\n  var HomeScreen = _wrapComponent(\"HomeScreen\")((_temp = _class = function (_React$Component) {\n    (0, _inherits2.default)(HomeScreen, _React$Component);\n\n    function HomeScreen() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, HomeScreen);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(HomeScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        mapRegion: null,\n        hasLocationPermissions: false,\n        locationResult: null,\n        location: {\n          coords: {\n            latitude: 37.78825,\n            longitude: -122.4324\n          }\n        },\n        mytasks: tasks,\n        random_shit: \"nothing\",\n        printer: []\n      };\n\n      _this._sendLocation = function _callee() {\n        return _regenerator.default.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fetch(\"URL\", {\n                  method: \"POST\",\n                  headers: headers,\n                  body: JSON.stringify(_this.state.location.coords)\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      };\n\n      _this._handleMapRegionChange = function (mapRegion) {\n        console.log(mapRegion);\n\n        _this.setState({\n          mapRegion: mapRegion\n        });\n      };\n\n      _this._getLocationAsync = function _callee2() {\n        var _ref, status, location;\n\n        return _regenerator.default.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regenerator.default.awrap(_expo.Permissions.askAsync(_expo.Permissions.LOCATION));\n\n              case 2:\n                _ref = _context2.sent;\n                status = _ref.status;\n\n                if (status !== 'granted') {\n                  _this.setState({\n                    locationResult: 'Permission to access location was denied'\n                  });\n                } else {\n                  _this.setState({\n                    hasLocationPermissions: true\n                  });\n                }\n\n                _context2.next = 7;\n                return _regenerator.default.awrap(_expo.Location.getCurrentPositionAsync({\n                  enableHighAccuracy: true\n                }));\n\n              case 7:\n                location = _context2.sent;\n\n                _this.setState({\n                  locationResult: JSON.stringify(location),\n                  location: location\n                });\n\n                _this.setState({\n                  mapRegion: {\n                    latitude: location.coords.latitude,\n                    longitude: location.coords.longitude,\n                    latitudeDelta: 0.0922,\n                    longitudeDelta: 0.0421\n                  }\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        });\n      };\n\n      _this._setLocationToTask = function () {\n        console.log(\"IT is working\");\n      };\n\n      _this._handleReset = function () {\n        _this.setState({\n          mapRegion: {\n            latitude: _this.state.location.coords.latitude,\n            longitude: _this.state.location.coords.longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421\n          }\n        });\n      };\n\n      _this._update_states = function _callee3() {\n        return _regenerator.default.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (tasks.newtasks[0] === 1) {\n                  tasks.newtasks[0] = 0;\n\n                  _this.setState({\n                    random_shit: \"Again nothing\",\n                    mapRegion: _this.state.mapRegion\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        });\n      };\n\n      _this._changeLocation = function (taskId) {\n        if (taskId != -1) {\n          console.log(taskId);\n          var curr_task = tasks.tasks[taskId];\n\n          _this.setState({\n            mapRegion: {\n              latitude: curr_task.coordinates.latitude,\n              longitude: curr_task.coordinates.longitude\n            }\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(HomeScreen, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._getLocationAsync();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var intervalID = setInterval(this._update_states, 1000);\n        var markers = this.state.mytasks.tasks || [];\n        var navigation = this.props.navigation;\n        var taskId = navigation.getParam('taskId', -1);\n\n        if (taskId != -1) {\n          console.log(taskId);\n          var curr_task = tasks.tasks[taskId];\n          this.setState({\n            mapRegion: {\n              latitude: curr_task.coordinates.latitude,\n              longitude: curr_task.coordinates.longitude\n            }\n          });\n        }\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          }\n        }, this.state.locationResult === null ? _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          }\n        }, \"Finding your current location...\") : this.state.hasLocationPermissions === false ? _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          }\n        }, \"Location permissions are not granted.\") : this.state.mapRegion === null ? _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          }\n        }, \"Map region doesn't exist.\") : _react.default.createElement(_expo.MapView, {\n          style: {\n            alignSelf: 'stretch',\n            height: 400\n          },\n          showsUserLocation: true,\n          followUserLocation: true,\n          region: this.state.mapRegion,\n          onRegionChangeComplete: this._handleMapRegionChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          }\n        }, markers.map(function (marker) {\n          return _react.default.createElement(_expo.MapView.Marker, {\n            key: marker.id,\n            coordinate: marker.coordinates,\n            title: marker.title,\n            description: marker.description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            }\n          });\n        })), _react.default.createElement(_reactNative.View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this._handleReset,\n          style: [styles.bubble, styles.button],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.bottomBarContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          }\n        }, \"Reset Location\"))), _react.default.createElement(_reactNative.View, {\n          style: styles.tabBarInfoContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.tabBarInfoText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          }\n        }, \"Location: \", this.state.locationResult)));\n      }\n    }]);\n    return HomeScreen;\n  }(_react.default.Component), _class.navigationOptions = {\n    header: null\n  }, _temp));\n\n  var _default2 = HomeScreen;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff'\n    },\n    developmentModeText: {\n      marginBottom: 20,\n      color: 'rgba(0,0,0,0.4)',\n      fontSize: 14,\n      lineHeight: 19,\n      textAlign: 'center'\n    },\n    contentContainer: {\n      paddingTop: 30\n    },\n    welcomeContainer: {\n      alignItems: 'center',\n      marginTop: 10,\n      marginBottom: 20\n    },\n    welcomeImage: {\n      width: 100,\n      height: 80,\n      resizeMode: 'contain',\n      marginTop: 3,\n      marginLeft: -10\n    },\n    getStartedContainer: {\n      alignItems: 'center',\n      marginHorizontal: 50\n    },\n    homeScreenFilename: {\n      marginVertical: 7\n    },\n    codeHighlightText: {\n      color: 'rgba(96,100,109, 0.8)'\n    },\n    codeHighlightContainer: {\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      borderRadius: 3,\n      paddingHorizontal: 4\n    },\n    getStartedText: {\n      fontSize: 17,\n      color: 'rgba(96,100,109, 1)',\n      lineHeight: 24,\n      textAlign: 'center'\n    },\n    tabBarInfoContainer: (0, _objectSpread2.default)({\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      right: 0\n    }, _reactNative.Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: {\n          height: -3\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 3\n      },\n      android: {\n        elevation: 20\n      }\n    }), {\n      alignItems: 'center',\n      backgroundColor: '#fbfbfb',\n      paddingVertical: 20\n    }),\n    tabBarInfoText: {\n      fontSize: 17,\n      color: 'rgba(96,100,109, 1)',\n      textAlign: 'center'\n    },\n    navigationFilename: {\n      marginTop: 5\n    },\n    helpContainer: {\n      marginTop: 15,\n      alignItems: 'center'\n    },\n    helpLink: {\n      paddingVertical: 15\n    },\n    helpLinkText: {\n      fontSize: 14,\n      color: '#2e78b7'\n    }\n  });\n});","map":[[23,0,1,0],[27,0,2,0],[29,0,11,0],[31,0,13,0],[56,0,15,0],[56,6,15,4,"tasks"],[56,11,15,9],[56,14,15,12,"require"],[56,25,15,19],[56,70,15,0],[58,0,16,0,"tasks"],[58,2,16,0,"tasks"],[58,7,16,5],[58,10,16,8,"tasks"],[58,15,16,13],[58,16,16,14,"tasks"],[58,21,16,0],[75,12,25,2,"state"],[75,17],[75,20,25,10],[76,0,26,4,"mapRegion"],[76,8,26,4,"mapRegion"],[76,17,26,13],[76,19,26,15],[76,23,25,10],[77,0,27,4,"hasLocationPermissions"],[77,8,27,4,"hasLocationPermissions"],[77,30,27,26],[77,32,27,28],[77,37,25,10],[78,0,28,4,"locationResult"],[78,8,28,4,"locationResult"],[78,22,28,18],[78,24,28,20],[78,28,25,10],[79,0,29,4,"location"],[79,8,29,4,"location"],[79,16,29,12],[79,18,29,13],[80,0,29,14,"coords"],[80,10,29,14,"coords"],[80,16,29,20],[80,18,29,22],[81,0,29,24,"latitude"],[81,12,29,24,"latitude"],[81,20,29,32],[81,22,29,34],[81,30,29,22],[82,0,29,44,"longitude"],[82,12,29,44,"longitude"],[82,21,29,53],[82,23,29,55],[82,24,29,56],[83,0,29,22],[84,0,29,13],[84,9,25,10],[85,0,30,4,"mytasks"],[85,8,30,4,"mytasks"],[85,15,30,11],[85,17,30,13,"tasks"],[85,22,25,10],[86,0,31,4,"random_shit"],[86,8,31,4,"random_shit"],[86,19,31,15],[86,21,31,18],[86,30,25,10],[87,0,32,4,"printer"],[87,8,32,4,"printer"],[87,15,32,11],[87,17,32,13],[88,0,25,10],[88,7],[90,12,46,2,"_sendLocation"],[90,25],[90,28,46,18],[91,0,46,18],[92,0,46,18],[93,0,46,18],[94,0,46,18],[95,0,47,4,"fetch"],[95,16,47,4,"fetch"],[95,21,47,9],[95,22,47,10],[95,27,47,9],[95,29,47,17],[96,0,48,7,"method"],[96,18,48,7,"method"],[96,24,48,13],[96,26,48,15],[96,32,47,17],[97,0,49,7,"headers"],[97,18,49,7,"headers"],[97,25,49,14],[97,27,49,16,"headers"],[97,34,47,17],[98,0,50,7,"body"],[98,18,50,7,"body"],[98,22,50,11],[98,24,50,14,"JSON"],[98,28,50,18],[98,29,50,19,"stringify"],[98,38,50,14],[98,39,50,29],[98,45,50,34,"state"],[98,50,50,29],[98,51,50,40,"location"],[98,59,50,29],[98,60,50,49,"coords"],[98,66,50,14],[99,0,47,17],[99,17,47,9],[99,18,47,4],[101,0,46,18],[102,0,46,18],[103,0,46,18],[104,0,46,18],[105,0,46,18],[106,0,46,18],[107,0,46,18],[107,7],[109,12,54,2,"_handleMapRegionChange"],[109,34],[109,37,54,27],[109,47,54,27,"mapRegion"],[109,56,54,36],[109,58,54,40],[110,0,55,4,"console"],[110,8,55,4,"console"],[110,15,55,11],[110,16,55,12,"log"],[110,19,55,4],[110,20,55,16,"mapRegion"],[110,29,55,4],[112,0,58,4],[112,14,58,9,"setState"],[112,22,58,4],[112,23,58,18],[113,0,58,20,"mapRegion"],[113,10,58,20,"mapRegion"],[113,19,58,29],[113,21,58,20,"mapRegion"],[114,0,58,18],[114,9,58,4],[115,0,59,3],[115,7],[117,12,61,2,"_getLocationAsync"],[117,29],[117,32,61,22],[118,0,61,22],[120,0,61,22],[121,0,61,22],[122,0,61,22],[123,0,61,22],[124,0,61,22],[125,0,61,22],[125,50,62,26,"Permissions"],[125,68,62,38,"askAsync"],[125,76,62,26],[125,77,62,47,"Permissions"],[125,95,62,59,"LOCATION"],[125,103,62,26],[125,104,61,22],[127,0,61,22],[128,0,61,22],[129,0,62,9,"status"],[129,16,62,9,"status"],[129,22,61,22],[129,30,62,9,"status"],[129,36,61,22],[131,0,63,3],[131,20,63,7,"status"],[131,26,63,13],[131,31,63,18],[131,40,63,3],[131,42,63,29],[132,0,64,5],[132,24,64,10,"setState"],[132,32,64,5],[132,33,64,19],[133,0,65,7,"locationResult"],[133,20,65,7,"locationResult"],[133,34,65,21],[133,36,65,23],[134,0,64,19],[134,19,64,5],[135,0,67,4],[135,17,63,3],[135,23,67,10],[136,0,68,5],[136,24,68,10,"setState"],[136,32,68,5],[136,33,68,19],[137,0,68,21,"hasLocationPermissions"],[137,20,68,21,"hasLocationPermissions"],[137,42,68,43],[137,44,68,45],[138,0,68,19],[138,19,68,5],[139,0,69,4],[141,0,61,22],[142,0,61,22],[142,50,71,24,"Location"],[142,65,71,33,"getCurrentPositionAsync"],[142,88,71,24],[142,89,71,57],[143,0,71,58,"enableHighAccuracy"],[143,18,71,58,"enableHighAccuracy"],[143,36,71,76],[143,38,71,78],[144,0,71,57],[144,17,71,24],[144,18,61,22],[146,0,61,22],[147,0,71,7,"location"],[147,16,71,7,"location"],[147,24,61,22],[149,0,72,3],[149,22,72,8,"setState"],[149,30,72,3],[149,31,72,17],[150,0,72,19,"locationResult"],[150,18,72,19,"locationResult"],[150,32,72,33],[150,34,72,35,"JSON"],[150,38,72,39],[150,39,72,40,"stringify"],[150,48,72,35],[150,49,72,50,"location"],[150,57,72,35],[150,58,72,17],[151,0,72,60,"location"],[151,18,72,60,"location"],[151,26,72,68],[151,28,72,60,"location"],[152,0,72,17],[152,17,72,3],[154,0,75,4],[154,22,75,9,"setState"],[154,30,75,4],[154,31,75,18],[155,0,75,19,"mapRegion"],[155,18,75,19,"mapRegion"],[155,27,75,28],[155,29,75,30],[156,0,75,32,"latitude"],[156,20,75,32,"latitude"],[156,28,75,40],[156,30,75,42,"location"],[156,38,75,50],[156,39,75,51,"coords"],[156,45,75,42],[156,46,75,58,"latitude"],[156,54,75,30],[157,0,75,68,"longitude"],[157,20,75,68,"longitude"],[157,29,75,77],[157,31,75,79,"location"],[157,39,75,87],[157,40,75,88,"coords"],[157,46,75,79],[157,47,75,95,"longitude"],[157,56,75,30],[158,0,75,106,"latitudeDelta"],[158,20,75,106,"latitudeDelta"],[158,33,75,119],[158,35,75,121],[158,41,75,30],[159,0,75,129,"longitudeDelta"],[159,20,75,129,"longitudeDelta"],[159,34,75,143],[159,36,75,145],[160,0,75,30],[161,0,75,18],[161,17,75,4],[163,0,61,22],[164,0,61,22],[165,0,61,22],[166,0,61,22],[167,0,61,22],[168,0,61,22],[169,0,61,22],[169,7],[171,12,78,2,"_setLocationToTask"],[171,30],[171,33,78,23],[171,45,78,29],[172,0,79,4,"console"],[172,8,79,4,"console"],[172,15,79,11],[172,16,79,12,"log"],[172,19,79,4],[172,20,79,16],[172,35,79,4],[173,0,80,3],[173,7],[175,12,82,2,"_handleReset"],[175,24],[175,27,82,17],[175,39,82,23],[176,0,86,4],[176,14,86,9,"setState"],[176,22,86,4],[176,23,86,18],[177,0,86,19,"mapRegion"],[177,10,86,19,"mapRegion"],[177,19,86,28],[177,21,86,30],[178,0,86,32,"latitude"],[178,12,86,32,"latitude"],[178,20,86,40],[178,22,86,42],[178,28,86,47,"state"],[178,33,86,42],[178,34,86,53,"location"],[178,42,86,42],[178,43,86,62,"coords"],[178,49,86,42],[178,50,86,69,"latitude"],[178,58,86,30],[179,0,86,79,"longitude"],[179,12,86,79,"longitude"],[179,21,86,88],[179,23,86,90],[179,29,86,95,"state"],[179,34,86,90],[179,35,86,101,"location"],[179,43,86,90],[179,44,86,110,"coords"],[179,50,86,90],[179,51,86,117,"longitude"],[179,60,86,30],[180,0,86,128,"latitudeDelta"],[180,12,86,128,"latitudeDelta"],[180,25,86,141],[180,27,86,143],[180,33,86,30],[181,0,86,151,"longitudeDelta"],[181,12,86,151,"longitudeDelta"],[181,26,86,165],[181,28,86,167],[182,0,86,30],[183,0,86,18],[183,9,86,4],[184,0,87,3],[184,7],[186,12,113,2,"_update_states"],[186,26],[186,29,113,19],[187,0,113,19],[188,0,113,19],[189,0,113,19],[190,0,113,19],[191,0,115,4],[191,20,115,7,"tasks"],[191,25,115,12],[191,26,115,13,"newtasks"],[191,34,115,7],[191,35,115,22],[191,36,115,7],[191,42,115,29],[191,43,115,4],[191,45,115,31],[192,0,116,6,"tasks"],[192,18,116,6,"tasks"],[192,23,116,11],[192,24,116,12,"newtasks"],[192,32,116,6],[192,33,116,21],[192,34,116,6],[192,38,116,26],[192,39,116,6],[194,0,117,6],[194,24,117,11,"setState"],[194,32,117,6],[194,33,117,20],[195,0,117,21,"random_shit"],[195,20,117,21,"random_shit"],[195,31,117,32],[195,33,117,34],[195,48,117,20],[196,0,117,51,"mapRegion"],[196,20,117,51,"mapRegion"],[196,29,117,60],[196,31,117,63],[196,37,117,68,"state"],[196,42,117,63],[196,43,117,74,"mapRegion"],[197,0,117,20],[197,19,117,6],[198,0,118,5],[200,0,113,19],[201,0,113,19],[202,0,113,19],[203,0,113,19],[204,0,113,19],[205,0,113,19],[206,0,113,19],[206,7],[208,12,121,2,"_changeLocation"],[208,27],[208,30,121,20],[208,40,121,21,"taskId"],[208,46,121,20],[208,48,121,32],[209,0,122,4],[209,12,122,7,"taskId"],[209,18,122,13],[209,22,122,17],[209,23,122,18],[209,24,122,4],[209,26,122,20],[210,0,123,6,"console"],[210,10,123,6,"console"],[210,17,123,13],[210,18,123,14,"log"],[210,21,123,6],[210,22,123,18,"taskId"],[210,28,123,6],[211,0,124,6],[211,14,124,10,"curr_task"],[211,23,124,19],[211,26,124,22,"tasks"],[211,31,124,27],[211,32,124,28,"tasks"],[211,37,124,22],[211,38,124,34,"taskId"],[211,44,124,22],[211,45,124,6],[213,0,125,6],[213,16,125,11,"setState"],[213,24,125,6],[213,25,125,20],[214,0,125,21,"mapRegion"],[214,12,125,21,"mapRegion"],[214,21,125,30],[214,23,125,32],[215,0,125,33,"latitude"],[215,14,125,33,"latitude"],[215,22,125,41],[215,24,125,43,"curr_task"],[215,33,125,52],[215,34,125,53,"coordinates"],[215,45,125,43],[215,46,125,65,"latitude"],[215,54,125,32],[216,0,125,75,"longitude"],[216,14,125,75,"longitude"],[216,23,125,84],[216,25,125,86,"curr_task"],[216,34,125,95],[216,35,125,96,"coordinates"],[216,46,125,86],[216,47,125,108,"longitude"],[217,0,125,32],[218,0,125,20],[218,11,125,6],[219,0,126,5],[220,0,127,3],[220,7],[227,42,37,22],[228,0,39,4],[228,13,39,9,"_getLocationAsync"],[228,30,39,4],[229,0,44,3],[232,31,130,11],[233,0,131,4],[233,12,131,8,"intervalID"],[233,22,131,18],[233,25,131,21,"setInterval"],[233,36,131,32],[233,37,131,33],[233,42,131,38,"_update_states"],[233,56,131,32],[233,58,131,54],[233,62,131,32],[233,63,131,4],[234,0,134,4],[234,12,134,8,"markers"],[234,19,134,15],[234,22,134,18],[234,27,134,23,"state"],[234,32,134,18],[234,33,134,29,"mytasks"],[234,40,134,18],[234,41,134,37,"tasks"],[234,46,134,18],[234,50,134,46],[234,52,134,4],[235,0,130,11],[235,12,136,12,"navigation"],[235,22,130,11],[235,25,136,27],[235,30,136,32,"props"],[235,35,130,11],[235,36,136,12,"navigation"],[235,46,130,11],[236,0,137,4],[236,12,137,10,"taskId"],[236,18,137,16],[236,21,137,19,"navigation"],[236,31,137,29],[236,32,137,30,"getParam"],[236,40,137,19],[236,41,137,39],[236,49,137,19],[236,51,137,49],[236,52,137,50],[236,53,137,19],[236,54,137,4],[238,0,140,4],[238,12,140,7,"taskId"],[238,18,140,13],[238,22,140,17],[238,23,140,18],[238,24,140,4],[238,26,140,20],[239,0,141,6,"console"],[239,10,141,6,"console"],[239,17,141,13],[239,18,141,14,"log"],[239,21,141,6],[239,22,141,18,"taskId"],[239,28,141,6],[240,0,142,6],[240,14,142,10,"curr_task"],[240,23,142,19],[240,26,142,22,"tasks"],[240,31,142,27],[240,32,142,28,"tasks"],[240,37,142,22],[240,38,142,34,"taskId"],[240,44,142,22],[240,45,142,6],[241,0,143,6],[241,15,143,11,"setState"],[241,23,143,6],[241,24,143,20],[242,0,143,21,"mapRegion"],[242,12,143,21,"mapRegion"],[242,21,143,30],[242,23,143,32],[243,0,143,33,"latitude"],[243,14,143,33,"latitude"],[243,22,143,41],[243,24,143,43,"curr_task"],[243,33,143,52],[243,34,143,53,"coordinates"],[243,45,143,43],[243,46,143,65,"latitude"],[243,54,143,32],[244,0,143,75,"longitude"],[244,14,143,75,"longitude"],[244,23,143,84],[244,25,143,86,"curr_task"],[244,34,143,95],[244,35,143,96,"coordinates"],[244,46,143,86],[244,47,143,108,"longitude"],[245,0,143,32],[246,0,143,20],[246,11,143,6],[247,0,144,5],[249,0,147,4],[249,15,149,6],[249,44,149,7],[249,61,149,6],[250,0,149,12],[250,10,149,12],[250,15,149,17],[250,17,149,19,"styles"],[250,23,149,25],[250,24,149,26,"container"],[250,33,149,6],[251,0,149,6],[252,0,149,6],[253,0,149,6],[254,0,149,6],[255,0,149,6],[255,11,189,10],[255,16,189,15,"state"],[255,21,189,10],[255,22,189,21,"locationResult"],[255,36,189,10],[255,41,189,40],[255,45,189,10],[255,48,190,10],[255,77,190,11],[255,94,190,10],[256,0,190,10],[257,0,190,10],[258,0,190,10],[259,0,190,10],[260,0,190,10],[260,46,189,10],[260,49,191,10],[260,54,191,15,"state"],[260,59,191,10],[260,60,191,21,"hasLocationPermissions"],[260,82,191,10],[260,87,191,48],[260,92,191,10],[260,95,192,12],[260,124,192,13],[260,141,192,12],[261,0,192,12],[262,0,192,12],[263,0,192,12],[264,0,192,12],[265,0,192,12],[265,51,191,10],[265,54,193,12],[265,59,193,17,"state"],[265,64,193,12],[265,65,193,23,"mapRegion"],[265,74,193,12],[265,79,193,37],[265,83,193,12],[265,86,194,12],[265,115,194,13],[265,132,194,12],[266,0,194,12],[267,0,194,12],[268,0,194,12],[269,0,194,12],[270,0,194,12],[270,39,193,12],[270,42,195,12],[270,71,195,13],[270,84,195,12],[271,0,196,16],[271,10,196,16],[271,15,196,21],[271,17,196,23],[272,0,196,25,"alignSelf"],[272,12,196,25,"alignSelf"],[272,21,196,34],[272,23,196,36],[272,32,196,23],[273,0,196,47,"height"],[273,12,196,47,"height"],[273,18,196,53],[273,20,196,55],[274,0,196,23],[274,11,195,12],[275,0,197,14],[275,10,197,14],[275,27,197,31],[275,29,197,33],[275,33,195,12],[276,0,198,14],[276,10,198,14],[276,28,198,32],[276,30,198,34],[276,34,195,12],[277,0,199,14],[277,10,199,14],[277,16,199,20],[277,18,199,23],[277,23,199,28,"state"],[277,28,199,23],[277,29,199,34,"mapRegion"],[277,38,195,12],[278,0,200,14],[278,10,200,14],[278,32,200,36],[278,34,200,38],[278,39,200,43,"_handleMapRegionChange"],[278,61,195,12],[279,0,195,12],[280,0,195,12],[281,0,195,12],[282,0,195,12],[283,0,195,12],[283,11,207,17,"markers"],[283,18,207,24],[283,19,207,25,"map"],[283,22,207,17],[283,23,207,29],[283,33,207,29,"marker"],[283,39,207,35],[284,0,207,35],[284,17,208,18],[284,46,208,19],[284,59,208,18],[284,60,208,27],[284,66,208,18],[285,0,208,34],[285,12,208,34],[285,15,208,37],[285,17,208,39,"marker"],[285,23,208,45],[285,24,208,46,"id"],[285,26,208,18],[286,0,209,20],[286,12,209,20],[286,22,209,30],[286,24,209,32,"marker"],[286,30,209,38],[286,31,209,39,"coordinates"],[286,42,208,18],[287,0,210,20],[287,12,210,20],[287,17,210,25],[287,19,210,27,"marker"],[287,25,210,33],[287,26,210,34,"title"],[287,31,208,18],[288,0,211,20],[288,12,211,20],[288,23,211,31],[288,25,211,33,"marker"],[288,31,211,39],[288,32,211,40,"description"],[288,43,208,18],[289,0,208,18],[290,0,208,18],[291,0,208,18],[292,0,208,18],[293,0,208,18],[293,12,207,35],[294,0,207,35],[294,9,207,17],[294,10,195,12],[294,11,149,6],[294,13,216,8],[294,42,216,9],[294,59,216,8],[295,0,216,14],[295,10,216,14],[295,15,216,19],[295,17,216,21,"styles"],[295,23,216,27],[295,24,216,28,"buttonContainer"],[295,39,216,8],[296,0,216,8],[297,0,216,8],[298,0,216,8],[299,0,216,8],[300,0,216,8],[300,11,217,10],[300,40,217,11],[300,69,217,10],[301,0,217,28],[301,10,217,28],[301,17,217,35],[301,19,217,37],[301,24,217,42,"_handleReset"],[301,36,217,10],[302,0,217,56],[302,10,217,56],[302,15,217,61],[302,17,217,63],[302,18,217,64,"styles"],[302,24,217,70],[302,25,217,71,"bubble"],[302,31,217,63],[302,33,217,79,"styles"],[302,39,217,85],[302,40,217,86,"button"],[302,46,217,63],[302,47,217,10],[303,0,217,10],[304,0,217,10],[305,0,217,10],[306,0,217,10],[307,0,217,10],[307,11,218,12],[307,40,218,13],[307,57,218,12],[308,0,218,18],[308,10,218,18],[308,15,218,23],[308,17,218,25,"styles"],[308,23,218,31],[308,24,218,32,"bottomBarContent"],[308,40,218,12],[309,0,218,12],[310,0,218,12],[311,0,218,12],[312,0,218,12],[313,0,218,12],[313,28,217,10],[313,29,216,8],[313,30,149,6],[313,32,225,8],[313,61,225,9],[313,78,225,8],[314,0,225,14],[314,10,225,14],[314,15,225,19],[314,17,225,21,"styles"],[314,23,225,27],[314,24,225,28,"tabBarInfoContainer"],[314,43,225,8],[315,0,225,8],[316,0,225,8],[317,0,225,8],[318,0,225,8],[319,0,225,8],[319,11,226,10],[319,40,226,11],[319,57,226,10],[320,0,226,16],[320,10,226,16],[320,15,226,21],[320,17,226,23,"styles"],[320,23,226,29],[320,24,226,30,"tabBarInfoText"],[320,38,226,10],[321,0,226,10],[322,0,226,10],[323,0,226,10],[324,0,226,10],[325,0,226,10],[325,25,226,57],[325,30,226,62,"state"],[325,35,226,57],[325,36,226,68,"locationResult"],[325,50,226,10],[325,51,225,8],[325,52,149,6],[325,53,147,4],[326,0,234,3],[329,4,19,40,"React"],[329,19,19,46,"Component"],[329,28],[329,38,20,9,"navigationOptions"],[329,55],[329,58,20,29],[330,0,21,4,"header"],[330,4,21,4,"header"],[330,10,21,10],[330,12,21,12],[331,0,20,29],[331,3],[336,0,272,0],[336,6,272,6,"styles"],[336,12,272,12],[336,15,272,15,"StyleSheet"],[336,39,272,26,"create"],[336,45,272,15],[336,46,272,33],[337,0,273,2,"container"],[337,4,273,2,"container"],[337,13,273,11],[337,15,273,13],[338,0,274,4,"flex"],[338,6,274,4,"flex"],[338,10,274,8],[338,12,274,10],[338,13,273,13],[339,0,275,4,"backgroundColor"],[339,6,275,4,"backgroundColor"],[339,21,275,19],[339,23,275,21],[340,0,273,13],[340,5,272,33],[341,0,277,2,"developmentModeText"],[341,4,277,2,"developmentModeText"],[341,23,277,21],[341,25,277,23],[342,0,278,4,"marginBottom"],[342,6,278,4,"marginBottom"],[342,18,278,16],[342,20,278,18],[342,22,277,23],[343,0,279,4,"color"],[343,6,279,4,"color"],[343,11,279,9],[343,13,279,11],[343,30,277,23],[344,0,280,4,"fontSize"],[344,6,280,4,"fontSize"],[344,14,280,12],[344,16,280,14],[344,18,277,23],[345,0,281,4,"lineHeight"],[345,6,281,4,"lineHeight"],[345,16,281,14],[345,18,281,16],[345,20,277,23],[346,0,282,4,"textAlign"],[346,6,282,4,"textAlign"],[346,15,282,13],[346,17,282,15],[347,0,277,23],[347,5,272,33],[348,0,284,2,"contentContainer"],[348,4,284,2,"contentContainer"],[348,20,284,18],[348,22,284,20],[349,0,285,4,"paddingTop"],[349,6,285,4,"paddingTop"],[349,16,285,14],[349,18,285,16],[350,0,284,20],[350,5,272,33],[351,0,287,2,"welcomeContainer"],[351,4,287,2,"welcomeContainer"],[351,20,287,18],[351,22,287,20],[352,0,288,4,"alignItems"],[352,6,288,4,"alignItems"],[352,16,288,14],[352,18,288,16],[352,26,287,20],[353,0,289,4,"marginTop"],[353,6,289,4,"marginTop"],[353,15,289,13],[353,17,289,15],[353,19,287,20],[354,0,290,4,"marginBottom"],[354,6,290,4,"marginBottom"],[354,18,290,16],[354,20,290,18],[355,0,287,20],[355,5,272,33],[356,0,292,2,"welcomeImage"],[356,4,292,2,"welcomeImage"],[356,16,292,14],[356,18,292,16],[357,0,293,4,"width"],[357,6,293,4,"width"],[357,11,293,9],[357,13,293,11],[357,16,292,16],[358,0,294,4,"height"],[358,6,294,4,"height"],[358,12,294,10],[358,14,294,12],[358,16,292,16],[359,0,295,4,"resizeMode"],[359,6,295,4,"resizeMode"],[359,16,295,14],[359,18,295,16],[359,27,292,16],[360,0,296,4,"marginTop"],[360,6,296,4,"marginTop"],[360,15,296,13],[360,17,296,15],[360,18,292,16],[361,0,297,4,"marginLeft"],[361,6,297,4,"marginLeft"],[361,16,297,14],[361,18,297,16],[361,19,297,17],[362,0,292,16],[362,5,272,33],[363,0,299,2,"getStartedContainer"],[363,4,299,2,"getStartedContainer"],[363,23,299,21],[363,25,299,23],[364,0,300,4,"alignItems"],[364,6,300,4,"alignItems"],[364,16,300,14],[364,18,300,16],[364,26,299,23],[365,0,301,4,"marginHorizontal"],[365,6,301,4,"marginHorizontal"],[365,22,301,20],[365,24,301,22],[366,0,299,23],[366,5,272,33],[367,0,303,2,"homeScreenFilename"],[367,4,303,2,"homeScreenFilename"],[367,22,303,20],[367,24,303,22],[368,0,304,4,"marginVertical"],[368,6,304,4,"marginVertical"],[368,20,304,18],[368,22,304,20],[369,0,303,22],[369,5,272,33],[370,0,306,2,"codeHighlightText"],[370,4,306,2,"codeHighlightText"],[370,21,306,19],[370,23,306,21],[371,0,307,4,"color"],[371,6,307,4,"color"],[371,11,307,9],[371,13,307,11],[372,0,306,21],[372,5,272,33],[373,0,309,2,"codeHighlightContainer"],[373,4,309,2,"codeHighlightContainer"],[373,26,309,24],[373,28,309,26],[374,0,310,4,"backgroundColor"],[374,6,310,4,"backgroundColor"],[374,21,310,19],[374,23,310,21],[374,41,309,26],[375,0,311,4,"borderRadius"],[375,6,311,4,"borderRadius"],[375,18,311,16],[375,20,311,18],[375,21,309,26],[376,0,312,4,"paddingHorizontal"],[376,6,312,4,"paddingHorizontal"],[376,23,312,21],[376,25,312,23],[377,0,309,26],[377,5,272,33],[378,0,314,2,"getStartedText"],[378,4,314,2,"getStartedText"],[378,18,314,16],[378,20,314,18],[379,0,315,4,"fontSize"],[379,6,315,4,"fontSize"],[379,14,315,12],[379,16,315,14],[379,18,314,18],[380,0,316,4,"color"],[380,6,316,4,"color"],[380,11,316,9],[380,13,316,11],[380,34,314,18],[381,0,317,4,"lineHeight"],[381,6,317,4,"lineHeight"],[381,16,317,14],[381,18,317,16],[381,20,314,18],[382,0,318,4,"textAlign"],[382,6,318,4,"textAlign"],[382,15,318,13],[382,17,318,15],[383,0,314,18],[383,5,272,33],[384,0,320,2,"tabBarInfoContainer"],[384,4,320,2,"tabBarInfoContainer"],[384,23,320,21],[385,0,321,4,"position"],[385,6,321,4,"position"],[385,14,321,12],[385,16,321,14],[385,26,320,21],[386,0,322,4,"bottom"],[386,6,322,4,"bottom"],[386,12,322,10],[386,14,322,12],[386,15,320,21],[387,0,323,4,"left"],[387,6,323,4,"left"],[387,10,323,8],[387,12,323,10],[387,13,320,21],[388,0,324,4,"right"],[388,6,324,4,"right"],[388,11,324,9],[388,13,324,11],[389,0,320,21],[389,7,325,7,"Platform"],[389,29,325,16,"select"],[389,35,325,7],[389,36,325,23],[390,0,326,6,"ios"],[390,6,326,6,"ios"],[390,9,326,9],[390,11,326,11],[391,0,327,8,"shadowColor"],[391,8,327,8,"shadowColor"],[391,19,327,19],[391,21,327,21],[391,28,326,11],[392,0,328,8,"shadowOffset"],[392,8,328,8,"shadowOffset"],[392,20,328,20],[392,22,328,22],[393,0,328,24,"height"],[393,10,328,24,"height"],[393,16,328,30],[393,18,328,32],[393,19,328,33],[394,0,328,22],[394,9,326,11],[395,0,329,8,"shadowOpacity"],[395,8,329,8,"shadowOpacity"],[395,21,329,21],[395,23,329,23],[395,26,326,11],[396,0,330,8,"shadowRadius"],[396,8,330,8,"shadowRadius"],[396,20,330,20],[396,22,330,22],[397,0,326,11],[397,7,325,23],[398,0,332,6,"android"],[398,6,332,6,"android"],[398,13,332,13],[398,15,332,15],[399,0,333,8,"elevation"],[399,8,333,8,"elevation"],[399,17,333,17],[399,19,333,19],[400,0,332,15],[401,0,325,23],[401,5,325,7],[401,6,320,21],[402,0,336,4,"alignItems"],[402,6,336,4,"alignItems"],[402,16,336,14],[402,18,336,16],[402,26,320,21],[403,0,337,4,"backgroundColor"],[403,6,337,4,"backgroundColor"],[403,21,337,19],[403,23,337,21],[403,32,320,21],[404,0,338,4,"paddingVertical"],[404,6,338,4,"paddingVertical"],[404,21,338,19],[404,23,338,21],[405,0,320,21],[405,6,272,33],[406,0,340,2,"tabBarInfoText"],[406,4,340,2,"tabBarInfoText"],[406,18,340,16],[406,20,340,18],[407,0,341,4,"fontSize"],[407,6,341,4,"fontSize"],[407,14,341,12],[407,16,341,14],[407,18,340,18],[408,0,342,4,"color"],[408,6,342,4,"color"],[408,11,342,9],[408,13,342,11],[408,34,340,18],[409,0,343,4,"textAlign"],[409,6,343,4,"textAlign"],[409,15,343,13],[409,17,343,15],[410,0,340,18],[410,5,272,33],[411,0,345,2,"navigationFilename"],[411,4,345,2,"navigationFilename"],[411,22,345,20],[411,24,345,22],[412,0,346,4,"marginTop"],[412,6,346,4,"marginTop"],[412,15,346,13],[412,17,346,15],[413,0,345,22],[413,5,272,33],[414,0,348,2,"helpContainer"],[414,4,348,2,"helpContainer"],[414,17,348,15],[414,19,348,17],[415,0,349,4,"marginTop"],[415,6,349,4,"marginTop"],[415,15,349,13],[415,17,349,15],[415,19,348,17],[416,0,350,4,"alignItems"],[416,6,350,4,"alignItems"],[416,16,350,14],[416,18,350,16],[417,0,348,17],[417,5,272,33],[418,0,352,2,"helpLink"],[418,4,352,2,"helpLink"],[418,12,352,10],[418,14,352,12],[419,0,353,4,"paddingVertical"],[419,6,353,4,"paddingVertical"],[419,21,353,19],[419,23,353,21],[420,0,352,12],[420,5,272,33],[421,0,355,2,"helpLinkText"],[421,4,355,2,"helpLinkText"],[421,16,355,14],[421,18,355,16],[422,0,356,4,"fontSize"],[422,6,356,4,"fontSize"],[422,14,356,12],[422,16,356,14],[422,18,355,16],[423,0,357,4,"color"],[423,6,357,4,"color"],[423,11,357,9],[423,13,357,11],[424,0,355,16],[425,0,272,33],[425,3,272,15],[425,4,272,0]]},"type":"js/module"}]}